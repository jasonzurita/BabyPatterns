#!/usr/bin/ruby

default_platform(:ios)

platform :ios do
  desc "Set up certificates and code signing"
  lane :certificates do
    ["appstore", "development"].each { |type|
      provision(type: type)
    }
  end

  desc "Set up certificates and code signing for a specific type (e.g., appstore, development)"
  lane :provision do |options|
    if options[:use_temporary_keychain]
      create_temporary_keychain
    end
    type = options[:type]
    match(
      git_url: "git@github.com:jasonzurita/ios-certificates.git",
      username: "ios-dev@flippingleaf.com",
      app_identifier: [
        "com.jasonzurita.babypatterns",
        "com.flippingleaf.*",
        "com.jasonzurita.babypatterns.watchkitapp.watchkitextension",
        "com.jasonzurita.babypatterns.watchkitapp",
      ],
      type: type,
      skip_docs: true,
      force_for_new_devices: true,
    )
  end

  # https://medium.com/sixt-tech-blog/continuous-integration-and-delivery-at-sixt-91ca215670a0
  private_lane :create_temporary_keychain do
    keychain_name = "temporary_keychain"
    ENV["KEYCHAIN_NAME"] = keychain_name
    ENV["KEYCHAIN_PASSWORD"] = keychain_name
    ENV["MATCH_KEYCHAIN_NAME"] = keychain_name
    ENV["MATCH_KEYCHAIN_PASSWORD"] = keychain_name

    create_keychain(
      default_keychain: true,
      unlock: true,
      timeout: 3600,
      add_to_search_list: true,
    )
  end

  desc "Register new device for development"
  lane :register_new_device do
    device_name = prompt(text: "Enter the device name: ")
    device_udid = prompt(text: "Enter the device UDID: ")
    register_devices(
      username: "ios-dev@flippingleaf.com",
      devices: {device_name => device_udid}
    )
    provision(type: "development")
  end

  desc "Build dependencies"
  lane :build_dependencies do
    cocoapods(
      use_bundle_exec: false,
      repo_update: true,
    )
  end

  desc "Run tests"
  lane :test do
    scan(
      scheme: "BabyPatterns",
      clean: true,
      skip_build: true,
      # This needs to match with the CircleCI config yml
      output_directory: "artifacts/tests",
      output_files: "report.html",
      output_types: "html",
      devices: ["iPhone 8"],
      code_coverage: true,
    )
  end

  desc "Archive & upload to iTunes Connect"
  lane :release do
    gym(
      scheme: "BabyPatterns",
      configuration: "Release",
      clean: true,
      workspace: "BabyPatterns.xcworkspace",
      output_directory: "../",
      output_name: "BabyPatterns.ipa",
      include_bitcode: true,
      export_method: "app-store",
    )
    deliver(
      username: "ios-dev@flippingleaf.com",
      force: "true",
    )
  end
end

