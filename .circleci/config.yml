# iOS CircleCI 2.0 configuration file
# https://circleci.com/docs/2.0/configuration-reference/#section=configuration
#
version: 2
common-setup: &common-setup
    macos:
      xcode: "11.2.1"
    shell: /bin/bash --login -eo pipefail

jobs:
  lint-danger:
    <<: *common-setup
    steps:
      - run:
          name: Set Ruby Version
          command: echo "ruby-2.6" > ~/.ruby-version
      - checkout
      - restore_cache:
          keys:
            - v1-gems-{{ checksum "Gemfile.lock" }}
            - v1-gems-
      - run:
          name: Bundle install
          command: bundle install
          environment:
            BUNDLE_PATH: vendor/bundle
      - save_cache:
          key: v1-gems-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle
      - run:
          name: Run Dangerfile
          command: bundle exec danger
          environment:
            BUNDLE_PATH: vendor/bundle
    
  test:
    <<: *common-setup
    steps:
      - run:
          name: Set Ruby Version
          command: echo "ruby-2.6" > ~/.ruby-version
      - checkout
      - restore_cache:
          keys:
            - v1-gems-{{ checksum "Gemfile.lock" }}
            - v1-gems-
      - run:
          name: Bundle install
          command: bundle install
          environment:
            BUNDLE_PATH: vendor/bundle
      - save_cache:
          key: v1-gems-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle
      # This is required because SPM is getting defaulted to use SSH, which fails the build for public repos :(
      # Known Xcode bug workaround: https://discuss.circleci.com/t/xcode-11-gm-seed-1-released/32379/18
      - run:
          name: Override GitHub URL rewriting — to allow use of public repos
          command: |
            git config --global --unset url."ssh://git@github.com".insteadOf
      - run:
          name: "Make firebase plist"
          command: |
            echo $FIREBASE_GOOGLE_PLIST > './BabyPatterns/GoogleService-Info.plist'
      - run:
          name: Build dependencies
          command: bundle exec fastlane build_dependencies
          environment:
            BUNDLE_PATH: vendor/bundle
      - run:
          name: Build app and run tests
          command: bundle exec fastlane test
          environment:
            BUNDLE_PATH: vendor/bundle
      - store_test_results:
          # This needs to match with the Fastfile test output_directory
          path: artifacts/tests
      - store_artifacts:
          path: ~/Library/Logs/scan
          destination: scan-logs
      - store_artifacts:
          path: ~/project/artifacts/tests
          destination: test-results

  release:
    <<: *common-setup
    steps:
      - run:
          name: Set Ruby Version
          command: echo "ruby-2.5" > ~/.ruby-version
      - checkout
      - restore_cache:
          keys:
            - v1-gems-{{ checksum "Gemfile.lock" }}
            - v1-gems-
      - run:
          name: Bundle install
          command: bundle install
          environment:
            BUNDLE_PATH: vendor/bundle
      - save_cache:
          key: v1-gems-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle
      - run:
          name: "Make firebase plist"
          command: |
            echo $FIREBASE_GOOGLE_PLIST > './BabyPatterns/GoogleService-Info.plist'
      - run:
          name: Setup app store code signing
          command: bundle exec fastlane provision type:"appstore" use_temporary_keychain:true
          environment:
            BUNDLE_PATH: vendor/bundle
      - run:
          name: Archive and upload to iTunes Connect
          command: bundle exec fastlane release
          environment:
            BUNDLE_PATH: vendor/bundle
      - store_test_results:
          path: artifacts/tests
      - store_artifacts:
          path: ~/project/artifacts/tests
          destination: test-results

workflows:
  version: 2

  commit-workflow:
    jobs:
      - lint-danger:
          filters:
            branches:
              ignore: master
      - test:
          filters:
            branches:
              ignore: master

  release-workflow:
    jobs:
      - hold:
          type: approval
          filters:
            branches:
              only: master
      - release:
          requires:
            - hold
